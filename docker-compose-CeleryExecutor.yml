version: '2.1'
services:
    redis:
        image: 'redis:3.2.7'
        command: redis-server --requirepass redispass

    postgres:
        image: postgres:9.6
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        # Uncomment these lines to persist data on the local filesystem.
            - PGDATA=/var/lib/postgresql/data/pgdata
        volumes:
            - pgdata:/var/lib/postgresql/data/pgdata
        ports:
            - "5432:5432"
            
    webserver:
        image: vjsoria01/airflow-dev:20190308-2
        restart: always
        depends_on:
            - postgres
            - redis
        environment:
            - LOAD_EX=n
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
            - REDIS_PASSWORD=redispass
            - AIRFLOW_HOME=/usr/local/airflow
            - DAGS_FOLDER=/usr/local/airflow/dags
            - BASE_LOG_FOLDER=/usr/local/airflow/logs
            - PLUGINS_FOLDER=/usr/local/airflow/plugins
            #- AIRFLOW__WEBSERVER__AUTHENTICATE=true
            #- AIRFLOW__WEBSERVER__RBAC=true
            - AIRFLOW__WEBSERVER__AUTH_BACKEND=airflow.contrib.auth.backends.password_auth
            - AIRFLOW__WEBSERVER__NAVBAR_COLOR=#2D572C
            - AIRFLOW__CORE__SQL_ALCHEMY_POOL_SIZE=200
        volumes:
            - ${PWD-.}/dags:/usr/local/airflow/dags
            # Uncomment to include custom plugins
            - ${PWD-.}/plugins:/usr/local/airflow/plugins
            - ${PWD-.}/requirements.txt:/requirements.txt
        ports:
            - "8080:8080"
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    flower:
        image: vjsoria01/airflow-dev:20190329-1
        restart: always
        depends_on:
            - redis
        environment:
            - EXECUTOR=Celery
            - REDIS_PASSWORD=redispass
        ports:
            - "5555:5555"
        command: flower

    scheduler:
        image: vjsoria01/airflow-dev:20190329-1
        restart: always
        depends_on:
            - webserver
        volumes:
            - ${PWD-.}/dags:/usr/local/airflow/dags
            # Uncomment to include custom plugins
            - ${PWD-.}/plugins:/usr/local/airflow/plugins
            - ${PWD-.}/requirements.txt:/requirements.txt
        environment:
            - LOAD_EX=n
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
            - REDIS_PASSWORD=redispass
            - AIRFLOW_HOME=/usr/local/airflow
            - DAGS_FOLDER=/usr/local/airflow/dags
            - BASE_LOG_FOLDER=/usr/local/airflow/logs
            - PLUGINS_FOLDER=/usr/local/airflow/plugins
            - AIRFLOW__CORE__SQL_ALCHEMY_POOL_SIZE=200
        command: scheduler

    worker:
        image: vjsoria01/airflow-dev:20190329-1
        restart: always
        depends_on:
            - scheduler
        volumes:
            - ${PWD-.}/dags:/usr/local/airflow/dags
            # Uncomment to include custom plugins
            - ${PWD-.}/plugins:/usr/local/airflow/plugins
            - ${PWD-.}/requirements.txt:/requirements.txt
        environment:
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
            - REDIS_PASSWORD=redispass
            - AIRFLOW_HOME=/usr/local/airflow
            - DAGS_FOLDER=/usr/local/airflow/dags
            - BASE_LOG_FOLDER=/usr/local/airflow/logs
            - PLUGINS_FOLDER=/usr/local/airflow/plugins
            - AIRFLOW__CORE__SQL_ALCHEMY_POOL_SIZE=200
        command: worker
        
volumes:
  pgdata:
    external: true
